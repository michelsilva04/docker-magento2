version: "2.2"

services:

  nginx:
    depends_on:
      - php
    build:
      context: ./.docker/nginx
    ports:
      - "8080:80"
      - "4443:443"
    volumes:
      - ~/.composer:/var/www/.composer:cached
      - ~/.ssh/id_rsa:/var/www/.ssh/id_rsa:cached
      - ~/.ssh/known_hosts:/var/www/.ssh/known_hosts:cached
      - ./.docker/nginx/Config/projeto1.conf:/etc/nginx/conf.d/projeto1.conf:cached
      - ./projeto1:/app/code/magento2/

    networks:
      magento2_network:
        aliases:
          - local.m2.com.br

  php:
    build:
      context: ./.docker/php
    expose:
      - 9000
    volumes:
      - $SSH_AUTH_SOCK:/ssh-agent
      - $HOME/.ssh/known_hosts:/root/.ssh/known_hosts
      - ./projeto1:/app/code/magento2/
      - ./projeto1/auth.json:/usr/local/.composer/auth.json
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    environment:
      SSH_AUTH_SOCK: /ssh-agent
    networks:
      - magento2_network

  https-portal:
    image: steveltn/https-portal:1
    volumes:
      - ./.docker/certs:/var/lib/https-portal
    ports:
      - '80:80'
      - '443:443'
    links:
      - nginx
    environment:
      DOMAINS: 'local.projeto1.com.br -> http://nginx:80'
      STAGE: 'local'
      FORCE_RENEW: 'false'
    networks:
      - magento2_network

  cron:
    build:
      context: ./.docker/cron/
      dockerfile: ./Dockerfile
    entrypoint: [ "bash", "-c", "cron -f" ]
    volumes:
      - $SSH_AUTH_SOCK:/ssh-agent
      - $HOME/.ssh/known_hosts:/root/.ssh/known_hosts
      - ./projeto1:/app/code/magento2/
      - ./projeto1/auth.json:/usr/local/.composer/auth.json
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - magento2_network

  db:
    image: mariadb:10.4
    command: --max_allowed_packet=128M
#    shm_size: 2gb
    ports:
      - "3306:3306"
    env_file: ./.docker/db/db.env
    volumes:
      - ./.docker/db/_data:/var/lib/mysql
      - ./.docker/db/dump:/dump
    networks:
      - magento2_network

  rabbitmq:
    image: rabbitmq:3.8.8-management
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - magento2_network

  redis:
    image: redis
    ports:
      - "6379"
    networks:
      - magento2_network

  elasticsearch:
    image: elasticsearch:7.6.0
    environment:
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - magento2_network

  mongodb:
    image: mongo
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./.docker/mongo/w_data:/data/db
    ports:
        - 27017:27017
    networks:
      - magento2_network

  mailhog:
    image: mailhog/mailhog
    container_name: 'mailhog'
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - magento2_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
    networks:
      - magento2_network

volumes:
  elasticsearch-data:
    driver: local
networks:
  magento2_network:
    driver: bridge
