version: "2.3"

services:

  nginx:
    depends_on:
      - php
    build:
      context: ./.docker/nginx
    ports:
      - "8080:80"
      - "4443:443"
      - "8001:8001"
    volumes:
      - ~/.composer:/var/www/.composer:cached
      - ~/.ssh/id_rsa:/var/www/.ssh/id_rsa:cached
      - ~/.ssh/known_hosts:/var/www/.ssh/known_hosts:cached
      - ./.docker/nginx/Config/proj-varnish.conf:/etc/nginx/conf.d/proj-varnish.conf:cached
      - ./proj-varnish-magento:/app/code/magento2/

    networks:
      magento2_network:
        aliases:
          - local.proj-varnish.com.br

  varnish:
    image: varnish:stable
    container_name: varnish
    volumes:
      - "./.docker/varnish/varnish.vcl:/etc/varnish/default.vcl"
    ports:
      - "8050:80"
    tmpfs:
      - /var/lib/varnish:exec
    environment:
      - VARNISH_SIZE=2G
    command: "-p default_keep=300"
    depends_on:
      - "nginx"
    networks:
      - magento2_network

  php:
    build:
      context: ./.docker/php
    expose:
      - 9000
    volumes:
      - $SSH_AUTH_SOCK:/ssh-agent
      - $HOME/.ssh/known_hosts:/root/.ssh/known_hosts
      - ./proj-varnish-magento:/app/code/magento2/
      - ./proj-varnish-magento/auth.json:/usr/local/.composer/auth.json
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    environment:
      SSH_AUTH_SOCK: /ssh-agent
    networks:
      - magento2_network

  https-portal:
    image: steveltn/https-portal:1
    volumes:
      - ./.docker/certs:/var/lib/https-portal
    ports:
      - '80:80'
      - '443:443'
    links:
      - nginx
      - varnish
    environment:
      DOMAINS: 'local.proj-varnish.com.br -> http://varnish:80'
      STAGE: 'local'
      FORCE_RENEW: 'false'
      PROXY_BUFFERS: '8 8k'
      PROXY_BUFFER_SIZE: '8k'
      CLIENT_MAX_BODY_SIZE: 4M
    networks:
      - magento2_network

  db:
    image: mariadb:10.6
    command: --max_allowed_packet=128M
    #    shm_size: 2gb
    ports:
      - "3306:3306"
    env_file: ./.docker/db/db.env
    volumes:
      - ./.docker/db/_data:/var/lib/mysql
      - ./.docker/db/dump:/dump
    networks:
      - magento2_network

  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - magento2_network

  redis:
    image: redis:7.0
    ports:
      - "6379"
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    healthcheck:
      test: 'redis-cli ping || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - magento2_network

  opensearch:
    image: 'magento/magento-cloud-docker-opensearch:2.5-1.3.6'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - discovery.seed_hosts=opensearch
      - bootstrap.memory_lock=true
      - DISABLE_SECURITY_PLUGIN=true
    ports:
      - '9200:9200'
    networks:
      - magento2_network

  mongodb:
    image: mongo
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./.docker/mongo/w_data:/data/db
    ports:
      - 27017:27017
    networks:
      - magento2_network

  mailhog:
    image: mailhog/mailhog
    container_name: 'mailhog'
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - magento2_network

volumes:
  elasticsearch-data:
    driver: local
networks:
  magento2_network:
    driver: bridge
